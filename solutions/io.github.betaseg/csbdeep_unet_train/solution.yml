album_api_version: 0.5.5
args:
- description: root folder of your data. Data structure must be provided as specified
    in documentation!
  name: root
  required: true
  type: string
- default: true
  description: Whether to use augmentation or not. If enabled the data is probabilistically
    flipped, rotated, elastic deformed, intensity scaled and additionally noised.
  name: use_augmentation
  required: false
  type: boolean
- default: 12000
  description: The absolute number of bytes to allocate for GPU memory.
  name: limit_gpu_memory
  required: false
  type: integer
- default: 48,128,128
  description: Patch size of each training instance.  Must be given as a string separated
    by ",".
  name: patch_size
  required: false
  type: string
- default: 4
  description: 'The depth of the network. Default: 3'
  name: unet_n_depth
  required: false
  type: integer
- default: '2'
  description: batch size to be used during training
  name: batch_size
  required: false
  type: integer
- default: ''
  description: min and max to use for normalization, if not given use 1st and 99.8th
    percentile of each image
  name: normalize_mi_ma
  required: false
  type: string
- default: 2,2,2
  description: The pool size of the network. Must be given as a string separated by
    ",". Should be as many numbers as unet is deep.
  name: unet_pool_size
  required: false
  type: string
- default: 1,1
  description: The weights for the binary cross entropy loss part. First weight for
    negative class. Must be given as a string separated by ",".
  name: train_class_weight
  required: false
  type: string
- default: 300
  description: Number of epochs to train for.
  name: epochs
  required: false
  type: integer
- default: 512
  description: Number of steps per epochs.
  name: steps_per_epoch
  required: false
  type: integer
- default: 0.5
  description: Factor to reduce learn rate over time.
  name: train_reduce_lr_factor
  required: false
  type: float
- default: 50
  description: Patience after which to start learn rate reduction.
  name: train_reduce_lr_patience
  required: false
  type: integer
- default: true
  description: Whether to use gpu for augmentations. Only enable if you have a GPU
    available that is compatible with tensorflow 2.0.
  name: use_gpu_for_aug
  required: false
  type: boolean
- default: false
  description: dry run (dont create any output files/folders)
  name: dry
  required: false
  type: boolean
- default: 4
  description: 'Number of threads to use for training. On Windows, multiprocessing
    will be deactivated. Default: 4'
  name: num_workers
  required: false
  type: integer
changelog: null
cite:
- doi: '15.12 (2018): 1090-1097.'
  text: 'Weigert, Martin, et al. "Content-aware image restoration: pushing the limits
    of fluorescence microscopy." Nature methods 15.12 (2018): 1090-1097.'
covers:
- description: CSBDeep Unet Train Cover Image
  source: cover.jpg
description: An album solution to train a Unet with CSBDeep.
documentation:
- README.md
group: io.github.betaseg
license: MIT
name: csbdeep_unet_train
solution_creators:
- Martin Weigert
- Jan Philipp Albrecht
tags:
- machine learning
- dataset
- CSBDeep
- Unet
- training
timestamp: '2024-01-23T17:51:44.694993'
title: CSBDeep Unet Train
version: 0.1.0
